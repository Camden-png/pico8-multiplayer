pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
players = {{x = 175}, {x = 201}}
b_pressed = false
r_pressed = false
others_id = nil
global = nil
clock = 0
hold = 0
id = nil

function _init()
  cls()
  camera(128)
  -- send 1 to python
  poke(0x4300, 1)
  serial(0x805, 0x4300, 1)
  -- reset memory
  poke(0x4300, 0)
  -- buffer
  flip()
end

-- setup player 1 or player 2
function setup(mode)
  if mode == "red" then
    others_id = 2; id = 1
  else
    others_id = 1; id = 2
  end
end

-- send python strings with
-- $ as the null terminator
-- character by character
function output(string)
  string = string.."$"
  local length = #string
  for i = 1,length do
    local char = sub(string, i, i)
    local value = ord(char)
    poke(0x4316+i-1, value)
  end
  serial(0x805, 0x4316, length)
end

-- read strings from python
-- 16 bytes (characters) at
-- a time and set global to
-- the newest read string
function input()
  local string = ""
  local valid = true
  serial(0x804, 0x4300, 16)
  for i = 0,15 do
    local value = peek(0x4300+i)
    if value != 0 then
      local char = chr(value)
      string = string..char
    else
      if i == 0 then valid = false end
      break
    end
  end
  if valid then
    if not id then setup(string)
    else global = string end
  end
end

function controls()
  -- setup
  local offset = 2
  local x = players[id].x
  local r = (x+9)/8
  local l = (x-2)/8
  local r_wall = fget(mget(r, 11), 0)
  local l_wall = fget(mget(l, 11), 0)
  -- button movement code
  if btn(0) and not btn(1)
  and not l_wall then
    players[id].x -= offset
  elseif btn(1) and not btn(0)
  and not r_wall then
    players[id].x += offset
  end
  -- show other player's movement
  if global and sub(global, 1, 2) == "x:" then
    local location = sub(global, 3, #global)
    players[others_id].x = tonum(location)
  end
  -- smooth wall collisions
  x = players[id].x
  if x < 9 then
    players[id].x = 9
  elseif x > 367 then
    players[id].x = 367 end
  -- smooth special wall collisions
  if not b_pressed and id == 1
  and x < 137 then
    players[id].x = 137
  elseif not r_pressed and id == 2
  and x > 239 then
    players[id].x = 239
  end
end

function cam()
  local x = players[id].x
  if x < 24 then camera(0)
  elseif x < 152 then camera(players[id].x-24)
  elseif x > 352 then camera(256)
  elseif x > 224 then camera(players[id].x-96)
  else camera(128) end
end

function _update60()
  if id then
    -- send the player's x
    -- location to python...
    -- python then sends it
    -- to the other player!
    controls()
    output("x: "..players[id].x)
    cam()
  end
  -- process the other
  -- player's x location
  input()
  draw()
end

function outline(x, y) rect(x-1, y-1, x+8, y+8, 7) end

function draw()
  cls()
  -- setup player 2
  if not id then setup("blue") end
  -- change the background color
  rectfill(0, 0, 383, 127, 13)
  -- draw the map
  map()
  -- draw pretty player data
  local x = ""
  local bool = id == 1
  if global and sub(global, 1, 2) == "x:" then
    x = global
  else
    if bool then x = players[2].x
    else x = players[1].x end
    x = "x: "..x
  end
  local cam = peek2(0x5f28)
  local length = #tostr(x)-5
  if length < 0 then length = 0 end
  local offset = length*4
  rect(cam+1, 1, cam+offset+45, 17, 7)
  rectfill(cam+2, 2, cam+offset+44, 16, 0)
  cursor(cam+4, 4)
  if bool then
    ?"\f7you are \f8p1"
    ?"\fcp2\f7's "..x
  else
    ?"\f7you are \fcp2"
    ?"\f8p1\f7's "..x
  end
  -- get player 1 and 2's sprites
  local y = 95
  local player_sprite = 0
  local others_sprite = 1
  local others_colors = 12
  if not bool then
    player_sprite = 1
    others_sprite = 0
    others_colors = 8
  end
  -- animate the players
  bool = hold == 0
  if time() - clock > 2 or not bool then
    player_sprite += 16
    others_sprite += 16
    clock = time()
    if not bool then hold -= 1
    else hold = 4 end
  end
  -- draw the players
  local others_x = players[others_id].x
  local player_x = players[id].x
  outline(others_x, y)
  spr(others_sprite, others_x, y)
  outline(player_x, y)
  spr(player_sprite, player_x, y)
  -- check if switches pressed
  if not b_pressed and (id == 2 and player_x == 9
  or global == "b_pressed") then
    b_pressed = true
  elseif not r_pressed and (id == 1 and player_x == 367
  or global == "r_pressed") then
    r_pressed = true
  end
  -- open the blocked areas
  if b_pressed and mget(1, 12) != 27 then
    mset(1, 12, 27)
    output("b_pressed")
    for i = 0,3 do yield() end
    for i = 0,2 do
      local offset = i*128
      memcpy(0x2681+offset, 0x2690+offset, 15)
      mset(15, i+13, i*16+4)
    end
  elseif r_pressed and mget(46, 12) != 28 then
    mset(46, 12, 28)
    output("r_pressed")
    for i = 0,3 do yield() end
    for i = 0,2 do
      local offset = i*128
      memcpy(0x26a0+offset, 0x2691+offset, 15)
      mset(32, i+13, i*16+2)
    end
  end
  -- draw the special walls
  for i = 0,3 do
    local offset = 72+i*8
    if not b_pressed then spr(33, 128, offset) end
    if not r_pressed then spr(32, 248, offset) end
  end
end
__gfx__
88888888cccccccc5555555555555555555555552222222222222222222222221111111111111111111111110000000000000000000000000000000000000000
88288288cc1cc1cc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
88288288c11cc11c5656666666666666666665652828888888888888888882821c1cccccccccccccccccc1c10011cc0000882200000000000000000000000000
88288288cc1cc1cc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10011cc0000882200000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10011cc0000882200000000000000000000000000
82888828c1cccc1c5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
88222288cc1111cc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
88288288c11cc11c5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc10011cc0000882200000000000000000000000000
82888828c1cccc1c5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
88222288cc1111cc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
88888888cccccccc5666666666666666666666652888888888888888888888821cccccccccccccccccccccc15556666666666555000000000000000000000000
22222222111111115666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
288888821cccccc15666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
282222821c1111c15666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
282882821c1cc1c15666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
282882821c1cc1c15666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
282222821c1111c15656666666666666666665652828888888888888888882821c1cccccccccccccccccc1c10000000000000000000000000000000000000000
288888821cccccc15666666666666666666666652888888888888888888888821cccccccccccccccccccccc10000000000000000000000000000000000000000
22222222111111115555555555555555555555552222222222222222222222221111111111111111111111110000000000000000000000000000000000000000
__gff__
0000010001000000000000000000000000000100010000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
140b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
140506060606060606060606060606070203030303030303030303030303030408090909090909090909090909090a120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
141516161616161616161616161616171213131313131313131313131313131418191919191919191919191919191a120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
242526262626262626262626262626272223232323232323232323232323232428292929292929292929292929292a220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
